import cv2;
import numpy;
for i in range(1,11):
    img=cv2.imread('images/'+str(i)+'.png');
    lower=numpy.array([70,0,0]);
    upper=numpy.array([150,255,255]);
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV);
    mask=cv2.inRange(hsv,lower,upper);


    def empty(a):
        pass;




    lower_green = numpy.array([37, 0, 0]);
    upper_green = numpy.array([55, 255, 255]);
    mask_green = cv2.inRange(hsv, lower_green, upper_green);

    lower_brown = numpy.array([5, 50, 0]);
    upper_brown = numpy.array([25, 255, 255]);

    mask_brown = cv2.inRange(hsv, lower_brown, upper_brown);
    imgResult_brown = cv2.bitwise_and(img, img, mask=mask_brown);

    img[mask_brown > 0] = (65, 150, 240);
    imgResult_green = cv2.bitwise_and(img, img, mask=mask_green);
    img[mask_green > 0] = (179, 250, 25);
    cv2.imshow("Result", img);

    lower_green=numpy.array([37,0,0]);
    upper_green=numpy.array([55,255,255]);
    mask_green=cv2.inRange(hsv,lower_green,upper_green);

    img[mask_green>0]=(16,233,46);
    img_green=cv2.bitwise_and(img,img,mask=mask_green);

    copy=img_green.copy();
    gray=cv2.cvtColor(img_green,cv2.COLOR_BGR2GRAY);
    blur=cv2.GaussianBlur(gray,(3,3),11);
    canny=cv2.Canny(blur,1,1);
    contours, a_ = cv2.findContours(canny, cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE);
    hg=0;
    for c in contours:



        if(cv2.contourArea(c)>500):

            approx=cv2.approxPolyDP(c,0.27*cv2.arcLength(c,True),True)
            if len(approx)==3:
                hg+=1;
                cv2.drawContours(img, [approx], 0, (0, 255, 0), -1);



    print( "no of houses in the unburnt region is :"+str(hg));

    cv2.waitKey(0);
